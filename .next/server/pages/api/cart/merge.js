"use strict";(()=>{var e={};e.id=1163,e.ids=[1163],e.modules={41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},23211:(e,t,r)=>{r.r(t),r.d(t,{config:()=>d,default:()=>l,routeModule:()=>g});var s={};r.r(s),r.d(s,{default:()=>c});var a=r(71802),n=r(47153),o=r(56249),i=r(41649),u=r(51004);async function c(e,t){if("POST"!==e.method)return t.status(405).json({success:!1,message:"Method not allowed"});let r=await (0,i.getSession)({req:e});if(!r?.user?.id)return t.status(401).json({success:!1,message:"Authentication required"});let{sessionId:s}=e.body;if(!s)return t.status(400).json({success:!1,message:"Session ID is required"});try{let e;let a=r.user.id,n=await (0,u.query)("SELECT id FROM carts WHERE session_id = $1",[s]);if(0===n.rows.length)return t.status(200).json({success:!0,message:"No session cart to merge"});let o=n.rows[0].id,i=await (0,u.query)("SELECT id FROM carts WHERE user_id = $1",[a]);e=0===i.rows.length?(i=await (0,u.query)("INSERT INTO carts (user_id) VALUES ($1) RETURNING id",[a])).rows[0].id:i.rows[0].id;let c=(await (0,u.query)("SELECT product_id, quantity FROM cart_items WHERE cart_id = $1",[o])).rows,l=await u.query.getClient();try{for(let t of(await l.query("BEGIN"),c)){let r=await l.query("SELECT id, quantity FROM cart_items WHERE cart_id = $1 AND product_id = $2",[e,t.product_id]);if(r.rows.length>0){let e=r.rows[0],s=e.quantity+t.quantity;await l.query("UPDATE cart_items SET quantity = $1, updated_at = CURRENT_TIMESTAMP WHERE id = $2",[s,e.id])}else await l.query("INSERT INTO cart_items (cart_id, product_id, quantity) VALUES ($1, $2, $3)",[e,t.product_id,t.quantity])}await l.query("DELETE FROM carts WHERE id = $1",[o]),await l.query("COMMIT")}catch(e){throw await l.query("ROLLBACK"),e}finally{l.release()}return t.status(200).json({success:!0,message:"Carts merged successfully"})}catch(e){return console.error("Error merging carts:",e),t.status(500).json({success:!1,message:"Error merging carts"})}}let l=(0,o.l)(s,"default"),d=(0,o.l)(s,"config"),g=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/cart/merge",pathname:"/api/cart/merge",bundlePath:"",filename:""},userland:s})},51004:(e,t,r)=>{r.r(t),r.d(t,{createUser:()=>o,default:()=>E,getCategories:()=>g,getCategoryBySlug:()=>d,getConnection:()=>a,getProductBySlug:()=>P,getProducts:()=>y,getUserByEmail:()=>i,getUserById:()=>u,pool:()=>l,query:()=>s,transaction:()=>n,updateUser:()=>c});let s=async(e,t=[])=>(console.log(`Database query: ${e}`,t),{rows:[],rowCount:0}),a=async()=>(console.log("Getting database connection"),{query:s,release:()=>console.log("Connection released")}),n=async e=>{console.log("Starting database transaction");let t=await a();try{await t.query("BEGIN");let r=await e(t);return await t.query("COMMIT"),r}catch(e){throw await t.query("ROLLBACK"),e}finally{t.release()}},o=async e=>(console.log("Creating user:",e),{id:"mock-user-id",...e}),i=async e=>(console.log("Getting user by email:",e),null),u=async e=>(console.log("Getting user by ID:",e),null),c=async(e,t)=>(console.log("Updating user:",e,t),{id:e,...t}),l={query:async(e,t=[])=>(console.log(`Pool query: ${e}`,t),{rows:[],rowCount:0}),connect:async()=>(console.log("Pool connection established"),{query:async(e,t=[])=>(console.log(`Connection query: ${e}`,t),{rows:[],rowCount:0}),release:()=>console.log("Connection released")})},d=async e=>(console.log(`Getting category by slug: ${e}`),{id:1,name:"iPhone Parts",slug:e,description:"High-quality iPhone replacement parts"}),g=async()=>(console.log("Getting all categories"),[{id:1,name:"iPhone Parts",slug:"iphone-parts"},{id:2,name:"Samsung Parts",slug:"samsung-parts"},{id:3,name:"iPad Parts",slug:"ipad-parts"},{id:4,name:"Tools",slug:"tools"}]),y=async(e={})=>(console.log("Getting products with filters:",e),[{id:1,name:"iPhone 15 Pro Screen",slug:"iphone-15-pro-screen",price:299.99,category:"iPhone Parts"},{id:2,name:"Samsung S24 Battery",slug:"samsung-s24-battery",price:89.99,category:"Samsung Parts"}]),P=async e=>(console.log(`Getting product by slug: ${e}`),{id:1,name:"iPhone 15 Pro Screen",slug:e,price:299.99,description:"High-quality OLED screen replacement for iPhone 15 Pro",category:"iPhone Parts"}),E={query:s,getConnection:a,transaction:n,createUser:o,getUserByEmail:i,getUserById:u,updateUser:c,pool:l,getCategoryBySlug:d,getCategories:g,getProducts:y,getProductBySlug:P}},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=23211);module.exports=r})();