"use strict";(()=>{var e={};e.id=8843,e.ids=[8843],e.modules={4722:e=>{e.exports=require("next-auth/react")},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return s}});var s=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},33480:(e,t,s)=>{e.exports=s(75600)},68135:(e,t,s)=>{s.r(t),s.d(t,{config:()=>d,default:()=>l,routeModule:()=>g});var n={};s.r(n),s.d(n,{default:()=>u});var a=s(33480),r=s(8667),o=s(86435),i=s(4722),c=s(75217);async function u(e,t){if("PUT"!==e.method)return t.status(405).json({success:!1,message:"Method not allowed"});try{let s,n=await (0,i.getSession)({req:e}),a=n?.user?.id,{sessionId:r}=e.cookies;if(!a&&!r)return t.status(401).json({success:!1,message:"Authentication required"});let{itemId:o,quantity:u}=e.body;if(!o||!u)return t.status(400).json({success:!1,message:"Item ID and quantity are required"});let l=parseInt(u);if(isNaN(l)||l<1)return t.status(400).json({success:!1,message:"Quantity must be a positive integer"});if(a){let e=await (0,c.query)('SELECT id FROM carts WHERE user_id = ? AND status = "active" LIMIT 1',[a]);if(0===e.length)return t.status(404).json({success:!1,message:"Cart not found"});s=e[0].id}else{let e=await (0,c.query)('SELECT id FROM carts WHERE session_id = ? AND status = "active" LIMIT 1',[r]);if(0===e.length)return t.status(404).json({success:!1,message:"Cart not found"});s=e[0].id}let d=await (0,c.query)("SELECT id FROM cart_items WHERE cart_id = ? AND id = ? LIMIT 1",[s,o]);if(0===d.length)return t.status(404).json({success:!1,message:"Item not found in cart"});await (0,c.query)("UPDATE cart_items SET quantity = ? WHERE id = ?",[l,o]);let g=await (0,c.query)(`
      SELECT ci.id, p.name, p.slug, p.price, ci.quantity, p.image_url, p.discount_percentage,
        CASE 
          WHEN p.discount_percentage > 0 
          THEN ROUND(p.price * (1 - p.discount_percentage / 100), 2) 
          ELSE NULL 
        END AS discounted_price,
        CASE 
          WHEN p.discount_percentage > 0 
          THEN ROUND(ROUND(p.price * (1 - p.discount_percentage / 100), 2) * ci.quantity, 2)
          ELSE ROUND(p.price * ci.quantity, 2)
        END AS total
      FROM cart_items ci
      JOIN products p ON ci.product_id = p.id
      WHERE ci.cart_id = ?
    `,[s]),p=g.reduce((e,t)=>e+t.quantity,0),y=g.reduce((e,t)=>e+t.total,0);return t.status(200).json({success:!0,message:"Cart updated successfully",cart:{id:s,user_id:a,items:g,item_count:p,subtotal:y}})}catch(e){return console.error("Error updating cart:",e),t.status(500).json({success:!1,message:"Internal server error"})}}let l=(0,o.M)(n,"default"),d=(0,o.M)(n,"config"),g=new a.PagesAPIRouteModule({definition:{kind:r.A.PAGES_API,page:"/api/cart/update",pathname:"/api/cart/update",bundlePath:"",filename:""},userland:n})},75217:(e,t,s)=>{s.r(t),s.d(t,{createUser:()=>o,default:()=>P,getCategories:()=>g,getCategoryBySlug:()=>d,getConnection:()=>a,getProductBySlug:()=>y,getProducts:()=>p,getUserByEmail:()=>i,getUserById:()=>c,pool:()=>l,query:()=>n,transaction:()=>r,updateUser:()=>u});let n=async(e,t=[])=>(console.log(`Database query: ${e}`,t),{rows:[],rowCount:0}),a=async()=>(console.log("Getting database connection"),{query:n,release:()=>console.log("Connection released")}),r=async e=>{console.log("Starting database transaction");let t=await a();try{await t.query("BEGIN");let s=await e(t);return await t.query("COMMIT"),s}catch(e){throw await t.query("ROLLBACK"),e}finally{t.release()}},o=async e=>(console.log("Creating user:",e),{id:"mock-user-id",...e}),i=async e=>(console.log("Getting user by email:",e),null),c=async e=>(console.log("Getting user by ID:",e),null),u=async(e,t)=>(console.log("Updating user:",e,t),{id:e,...t}),l={query:async(e,t=[])=>(console.log(`Pool query: ${e}`,t),{rows:[],rowCount:0}),connect:async()=>(console.log("Pool connection established"),{query:async(e,t=[])=>(console.log(`Connection query: ${e}`,t),{rows:[],rowCount:0}),release:()=>console.log("Connection released")})},d=async e=>(console.log(`Getting category by slug: ${e}`),{id:1,name:"iPhone Parts",slug:e,description:"High-quality iPhone replacement parts"}),g=async()=>(console.log("Getting all categories"),[{id:1,name:"iPhone Parts",slug:"iphone-parts"},{id:2,name:"Samsung Parts",slug:"samsung-parts"},{id:3,name:"iPad Parts",slug:"ipad-parts"},{id:4,name:"Tools",slug:"tools"}]),p=async(e={})=>(console.log("Getting products with filters:",e),[{id:1,name:"iPhone 15 Pro Screen",slug:"iphone-15-pro-screen",price:299.99,category:"iPhone Parts"},{id:2,name:"Samsung S24 Battery",slug:"samsung-s24-battery",price:89.99,category:"Samsung Parts"}]),y=async e=>(console.log(`Getting product by slug: ${e}`),{id:1,name:"iPhone 15 Pro Screen",slug:e,price:299.99,description:"High-quality OLED screen replacement for iPhone 15 Pro",category:"iPhone Parts"}),P={query:n,getConnection:a,transaction:r,createUser:o,getUserByEmail:i,getUserById:c,updateUser:u,pool:l,getCategoryBySlug:d,getCategories:g,getProducts:p,getProductBySlug:y}},75600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},86435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,s){return s in t?t[s]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,s)):"function"==typeof t&&"default"===s?t:void 0}}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var s=t(t.s=68135);module.exports=s})();