"use strict";(()=>{var e={};e.id=9393,e.ids=[9393],e.modules={4722:e=>{e.exports=require("next-auth/react")},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return s}});var s=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},14083:(e,t,s)=>{s.r(t),s.d(t,{config:()=>g,default:()=>l,routeModule:()=>d});var a={};s.r(a),s.d(a,{default:()=>u});var n=s(33480),r=s(8667),o=s(86435),i=s(4722),c=s(75217);async function u(e,t){let s=await (0,i.getSession)({req:e});if(!s||!s.user.isAdmin)return t.status(401).json({success:!1,message:"Unauthorized"});if("GET"===e.method)try{let e=await (0,c.query)(`
        SELECT * FROM integration_settings 
        WHERE integration_type IN ('amazon', 'ebay', 'tiktok')
      `),s={amazon:{status:"disconnected",settings:null,accounts:[]},ebay:{status:"disconnected",settings:null,accounts:[]},tiktok:{status:"disconnected",settings:null}};if(e.forEach(e=>{"amazon"===e.integration_type?(s.amazon.status=e.status,s.amazon.settings={apiKey:e.api_key,secretKey:e.api_secret}):"ebay"===e.integration_type?(s.ebay.status=e.status,s.ebay.settings={apiKey:e.api_key,secretKey:e.api_secret}):"tiktok"===e.integration_type&&(s.tiktok.status=e.status,s.tiktok.settings={apiKey:e.api_key,secretKey:e.api_secret})}),"connected"===s.amazon.status){let e=await (0,c.query)(`
          SELECT id, name, account_id, active
          FROM marketplace_accounts
          WHERE marketplace = 'amazon'
          ORDER BY name ASC
        `);s.amazon.accounts=e}if("connected"===s.ebay.status){let e=await (0,c.query)(`
          SELECT id, name, account_id, active
          FROM marketplace_accounts
          WHERE marketplace = 'ebay'
          ORDER BY name ASC
        `);s.ebay.accounts=e}return t.status(200).json({success:!0,marketplaces:s})}catch(e){return console.error("Error fetching marketplace integrations:",e),t.status(500).json({success:!1,message:"Internal server error"})}if("POST"===e.method)try{let{marketplace:s,apiKey:a,secretKey:n}=e.body;if(!s||!a||!n)return t.status(400).json({success:!1,message:"Marketplace, API key, and secret key are required"});if(!["amazon","ebay","tiktok"].includes(s))return t.status(400).json({success:!1,message:"Invalid marketplace"});return(await (0,c.query)(`
        SELECT id FROM integration_settings 
        WHERE integration_type = ?
        LIMIT 1
      `,[s])).length>0?await (0,c.query)(`
          UPDATE integration_settings
          SET api_key = ?, api_secret = ?, status = 'connected', updated_at = NOW()
          WHERE integration_type = ?
        `,[a,n,s]):await (0,c.query)(`
          INSERT INTO integration_settings (integration_type, api_key, api_secret, status, created_at, updated_at)
          VALUES (?, ?, ?, 'connected', NOW(), NOW())
        `,[s,a,n]),t.status(200).json({success:!0,message:`${s} integration connected successfully`})}catch(e){return console.error("Error connecting marketplace integration:",e),t.status(500).json({success:!1,message:"Internal server error"})}if("PUT"===e.method)try{let{accountId:s,active:a}=e.body;if(!s)return t.status(400).json({success:!1,message:"Account ID is required"});return await (0,c.query)(`
        UPDATE marketplace_accounts
        SET active = ?, updated_at = NOW()
        WHERE id = ?
      `,[+!!a,s]),t.status(200).json({success:!0,message:"Account status updated successfully"})}catch(e){return console.error("Error updating marketplace account:",e),t.status(500).json({success:!1,message:"Internal server error"})}if("DELETE"===e.method)try{let{marketplace:s}=e.body;if(!s)return t.status(400).json({success:!1,message:"Marketplace is required"});if(!["amazon","ebay","tiktok"].includes(s))return t.status(400).json({success:!1,message:"Invalid marketplace"});return await (0,c.query)(`
        UPDATE integration_settings
        SET status = 'disconnected', updated_at = NOW()
        WHERE integration_type = ?
      `,[s]),t.status(200).json({success:!0,message:`${s} integration disconnected successfully`})}catch(e){return console.error("Error disconnecting marketplace integration:",e),t.status(500).json({success:!1,message:"Internal server error"})}return t.status(405).json({success:!1,message:"Method not allowed"})}let l=(0,o.M)(a,"default"),g=(0,o.M)(a,"config"),d=new n.PagesAPIRouteModule({definition:{kind:r.A.PAGES_API,page:"/api/integrations/marketplaces",pathname:"/api/integrations/marketplaces",bundlePath:"",filename:""},userland:a})},33480:(e,t,s)=>{e.exports=s(75600)},75217:(e,t,s)=>{s.r(t),s.d(t,{createUser:()=>o,default:()=>m,getCategories:()=>d,getCategoryBySlug:()=>g,getConnection:()=>n,getProductBySlug:()=>p,getProducts:()=>y,getUserByEmail:()=>i,getUserById:()=>c,pool:()=>l,query:()=>a,transaction:()=>r,updateUser:()=>u});let a=async(e,t=[])=>(console.log(`Database query: ${e}`,t),{rows:[],rowCount:0}),n=async()=>(console.log("Getting database connection"),{query:a,release:()=>console.log("Connection released")}),r=async e=>{console.log("Starting database transaction");let t=await n();try{await t.query("BEGIN");let s=await e(t);return await t.query("COMMIT"),s}catch(e){throw await t.query("ROLLBACK"),e}finally{t.release()}},o=async e=>(console.log("Creating user:",e),{id:"mock-user-id",...e}),i=async e=>(console.log("Getting user by email:",e),null),c=async e=>(console.log("Getting user by ID:",e),null),u=async(e,t)=>(console.log("Updating user:",e,t),{id:e,...t}),l={query:async(e,t=[])=>(console.log(`Pool query: ${e}`,t),{rows:[],rowCount:0}),connect:async()=>(console.log("Pool connection established"),{query:async(e,t=[])=>(console.log(`Connection query: ${e}`,t),{rows:[],rowCount:0}),release:()=>console.log("Connection released")})},g=async e=>(console.log(`Getting category by slug: ${e}`),{id:1,name:"iPhone Parts",slug:e,description:"High-quality iPhone replacement parts"}),d=async()=>(console.log("Getting all categories"),[{id:1,name:"iPhone Parts",slug:"iphone-parts"},{id:2,name:"Samsung Parts",slug:"samsung-parts"},{id:3,name:"iPad Parts",slug:"ipad-parts"},{id:4,name:"Tools",slug:"tools"}]),y=async(e={})=>(console.log("Getting products with filters:",e),[{id:1,name:"iPhone 15 Pro Screen",slug:"iphone-15-pro-screen",price:299.99,category:"iPhone Parts"},{id:2,name:"Samsung S24 Battery",slug:"samsung-s24-battery",price:89.99,category:"Samsung Parts"}]),p=async e=>(console.log(`Getting product by slug: ${e}`),{id:1,name:"iPhone 15 Pro Screen",slug:e,price:299.99,description:"High-quality OLED screen replacement for iPhone 15 Pro",category:"iPhone Parts"}),m={query:a,getConnection:n,transaction:r,createUser:o,getUserByEmail:i,getUserById:c,updateUser:u,pool:l,getCategoryBySlug:g,getCategories:d,getProducts:y,getProductBySlug:p}},75600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},86435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,s){return s in t?t[s]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,s)):"function"==typeof t&&"default"===s?t:void 0}}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var s=t(t.s=14083);module.exports=s})();