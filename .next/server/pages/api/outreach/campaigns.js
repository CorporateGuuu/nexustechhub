"use strict";(()=>{var e={};e.id=7312,e.ids=[7312],e.modules={67096:e=>{e.exports=require("bcrypt")},73227:e=>{e.exports=require("next-auth")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},93598:e=>{e.exports=require("next-auth/providers/google")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},58260:(e,t,a)=>{a.r(t),a.d(t,{config:()=>h,default:()=>m,routeModule:()=>S});var r={};a.r(r),a.d(r,{default:()=>d});var n=a(71802),s=a(47153),i=a(56249),c=a(24634),o=a(80544),u=a(62113),l=a(45884);async function d(e,t){try{let a=await (0,u.getServerSession)(e,t,l.authOptions);if(!a||!a.user)return t.status(401).json({error:"Unauthorized"});switch(e.method){case"GET":return await p(e,t,a);case"POST":return await g(e,t,a);default:return t.status(405).json({error:"Method not allowed"})}}catch(e){return console.error("Error in campaigns API:",e),t.status(500).json({error:"Internal server error"})}}async function p(e,t,a){try{let a=parseInt(e.query.page)||1,r=parseInt(e.query.limit)||10,n=(a-1)*r,s=e.query.status||null,i=e.query.search||null,c=`
      SELECT c.*, 
        COUNT(DISTINCT cr.recipient_id) AS total_recipients,
        COUNT(DISTINCT CASE WHEN cr.status = 'sent' THEN cr.recipient_id END) AS sent_count,
        COUNT(DISTINCT CASE WHEN cr.status = 'failed' THEN cr.recipient_id END) AS failed_count,
        COUNT(DISTINCT CASE WHEN cr.status = 'pending' THEN cr.recipient_id END) AS pending_count
      FROM outreach_campaigns c
      LEFT JOIN campaign_recipients cr ON c.id = cr.campaign_id
    `,u=[],l="";s&&(l+=" WHERE c.status = $1",u.push(s)),i&&(l+=(l?" AND":" WHERE")+` c.name ILIKE $${u.length+1}`,u.push(`%${i}%`)),c+=l+" GROUP BY c.id ORDER BY c.created_at DESC"+` LIMIT $${u.length+1} OFFSET $${u.length+2}`,u.push(r,n);let d=await o.d_.query(c,u),p=`
      SELECT COUNT(*) AS total
      FROM outreach_campaigns c
      ${l}
    `,g=await o.d_.query(p,u.slice(0,-2)),m=parseInt(g.rows[0].total);return t.status(200).json({campaigns:d.rows,pagination:{page:a,limit:r,totalCount:m,totalPages:Math.ceil(m/r)}})}catch(e){return console.error("Error fetching campaigns:",e),t.status(500).json({error:"Failed to fetch campaigns"})}}async function g(e,t,a){try{let{name:r,description:n,channels:s,startDate:i,endDate:o,status:u}=e.body;if(!r||!s||!Array.isArray(s)||0===s.length)return t.status(400).json({error:"Name and at least one channel are required"});let l={name:r,description:n,channels:s,startDate:i||new Date,endDate:o||null,status:u||"draft",createdBy:a.user.id},d=await (0,c.mK)(l);if(!d.success)return t.status(400).json({error:d.error,details:d.details});let p=await (0,c.l9)(d.campaignId);return t.status(201).json(p)}catch(e){return console.error("Error creating campaign:",e),t.status(500).json({error:"Failed to create campaign"})}}let m=(0,i.l)(r,"default"),h=(0,i.l)(r,"config"),S=new n.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/outreach/campaigns",pathname:"/api/outreach/campaigns",bundlePath:"",filename:""},userland:r})},80544:(e,t,a)=>{a.d(t,{d_:()=>r});let r={query:async(e,t=[])=>(console.log(`Utils pool query: ${e}`,t),{rows:[],rowCount:0}),connect:async()=>(console.log("Utils pool connection established"),{query:async(e,t=[])=>(console.log(`Utils connection query: ${e}`,t),{rows:[],rowCount:0}),release:()=>console.log("Utils connection released")})}},24634:(e,t,a)=>{a.d(t,{l9:()=>n,mK:()=>r,r9:()=>s,sn:()=>i,tP:()=>c});let r=async e=>(console.log("Creating outreach campaign:",e),{success:!0,campaign:{id:`campaign_${Date.now()}`,...e,status:"draft",created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}),n=async e=>(console.log(`Getting campaign ${e}`),{success:!0,campaign:{id:e,name:"Sample Campaign",description:"Demo outreach campaign",status:"draft",channels:["email","whatsapp"],created_at:"2024-01-15T10:00:00.000Z",updated_at:"2024-01-15T10:00:00.000Z"}}),s=async(e,t)=>(console.log(`Scheduling campaign ${e} for ${t}`),{success:!0,campaign:{id:e,status:"scheduled",scheduled_at:t,updated_at:new Date().toISOString()}}),i=async e=>(console.log(`Executing campaign ${e} immediately`),{success:!0,execution:{campaign_id:e,status:"executing",started_at:new Date().toISOString(),estimated_completion:new Date(Date.now()+18e5).toISOString()}}),c=async(e,t)=>(console.log(`Adding ${t.length} recipients to campaign ${e}`),{success:!0,added:t.length,recipients:t.map((t,a)=>({id:`recipient_${Date.now()}_${a}`,...t,campaign_id:e,status:"pending",added_at:new Date().toISOString()}))})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[8074],()=>a(58260));module.exports=r})();