"use strict";(()=>{var e={};e.id=3192,e.ids=[3192],e.modules={67096:e=>{e.exports=require("bcrypt")},73227:e=>{e.exports=require("next-auth")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},93598:e=>{e.exports=require("next-auth/providers/google")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},11991:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>l,routeModule:()=>g});var s={};t.r(s),t.d(s,{default:()=>p});var a=t(71802),o=t(47153),u=t(56249),n=t(62113),i=t(45884),d=t(33739);async function p(e,r){let t=await (0,n.getServerSession)(e,r,i.authOptions);if(!t)return r.status(401).json({message:"Unauthorized"});let s=t.user.id;if("POST"===e.method)try{let e=await (0,d.generateBackupCodes)(s);if(!e||0===e.length)return r.status(500).json({message:"Failed to generate backup codes"});return r.status(200).json({codes:e})}catch(e){return console.error("Error generating backup codes:",e),r.status(500).json({message:"Internal server error"})}return r.status(405).json({message:"Method not allowed"})}let l=(0,u.l)(s,"default"),c=(0,u.l)(s,"config"),g=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/user/2fa/backup-codes",pathname:"/api/user/2fa/backup-codes",bundlePath:"",filename:""},userland:s})}};var r=require("../../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[8074],()=>t(11991));module.exports=s})();