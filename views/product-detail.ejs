<!-- JSON-LD structured data for product -->
<script type="application/ld+json">
{
  "@context": "https://schema.org/",
  "@type": "Product",
  "name": "<%= product.name %>",
  "image": "<%= product.image_url || '/placeholder.svg' %>",
  "description": "<%= product.description %>",
  "brand": {
    "@type": "Brand",
    "name": "<%= product.brand %>"
  },
  "sku": "<%= product.sku %>",
  "offers": {
    "@type": "Offer",
    "url": "http://localhost:3000/products/<%= product.slug %>",
    "priceCurrency": "USD",
    "price": <%= parseFloat(product.price) - (parseFloat(product.price) * parseFloat(product.discount_percentage) / 100) %>,
    "priceValidUntil": "<%= new Date(new Date().setFullYear(new Date().getFullYear() + 1)).toISOString().split('T')[0] %>",
    "itemCondition": "https://schema.org/NewCondition",
    "availability": "<%= product.stock_quantity > 0 ? 'https://schema.org/InStock' : 'https://schema.org/OutOfStock' %>"
  }
}
</script>

<a href="/products" style="display: inline-block; margin-bottom: 1rem;">&larr; Back to Products</a>

<div class="product-detail">
  <div class="product-grid">
    <div class="product-image">
      <img src="<%= product.image_url || '/placeholder.svg' %>" alt="<%= product.name %>">
    </div>
    <div class="product-info">
      <h1><%= product.name %></h1>
      <p style="color: #666; margin-bottom: 1rem;">Category: <%= product.category_name %></p>

      <div class="product-price">
        $<%= parseFloat(product.price).toFixed(2) %>
        <% if (parseFloat(product.discount_percentage) > 0) { %>
          <span class="discount-badge"><%= product.discount_percentage %>% OFF</span>
        <% } %>
      </div>

      <p><%= product.description %></p>

      <div style="margin: 1.5rem 0;">
        <h2>Specifications</h2>
        <div class="specs-box">
          <% if (specifications) { %>
            <% Object.entries(specifications).forEach(([key, value]) => { %>
              <% if (value && key !== 'id' && key !== 'product_id') { %>
                <div class="spec-item">
                  <span class="spec-label"><%= key.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %>:</span> <%= value %>
                </div>
              <% } %>
            <% }); %>
          <% } else { %>
            <p>No specifications available.</p>
          <% } %>
        </div>
      </div>

      <div style="display: flex; gap: 1rem;">
        <button class="btn" onclick="addToCart('<%= product.id %>', '<%= product.name %>', <%= parseFloat(product.price) %>)">Add to Cart</button>
        <% if (isAuthenticated) { %>
          <button id="wishlist-btn" class="btn btn-outline" onclick="toggleWishlist('<%= product.id %>')">
            <i class="fas fa-heart"></i> <span id="wishlist-text">Add to Wishlist</span>
          </button>
        <% } %>
      </div>

      <script>
        function addToCart(productId, productName, productPrice) {
          // Track the add to cart event
          if (typeof trackEvent === 'function') {
            trackEvent('Ecommerce', 'Add to Cart', productName, productPrice);
          }

          // Make API call to add to cart
          fetch('/api/cart/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              product_id: productId,
              quantity: 1
            })
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              alert('Product added to cart!');
            } else {
              alert(data.message || 'Error adding product to cart');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('Error adding product to cart');
          });
        }
      </script>
    </div>
  </div>
</div>

<!-- Reviews Section -->
<div class="card mt-4">
  <div class="card-header">
    <h2>Customer Reviews</h2>
  </div>
  <div class="card-body">
    <div id="reviews-container">
      <div class="text-center">
        <p>Loading reviews...</p>
      </div>
    </div>

    <% if (isAuthenticated) { %>
      <div class="mt-4">
        <h3>Write a Review</h3>
        <form id="review-form">
          <div class="form-group">
            <label for="rating">Rating</label>
            <div class="rating-input">
              <input type="radio" id="star5" name="rating" value="5" required>
              <label for="star5">★</label>
              <input type="radio" id="star4" name="rating" value="4">
              <label for="star4">★</label>
              <input type="radio" id="star3" name="rating" value="3">
              <label for="star3">★</label>
              <input type="radio" id="star2" name="rating" value="2">
              <label for="star2">★</label>
              <input type="radio" id="star1" name="rating" value="1">
              <label for="star1">★</label>
            </div>
          </div>

          <div class="form-group">
            <label for="title">Review Title</label>
            <input type="text" id="title" name="title" class="form-control" required>
          </div>

          <div class="form-group">
            <label for="comment">Your Review</label>
            <textarea id="comment" name="comment" class="form-control" rows="4" required></textarea>
          </div>

          <button type="submit" class="btn">Submit Review</button>
        </form>
      </div>
    <% } else { %>
      <div class="mt-4">
        <p>Please <a href="/login">log in</a> to write a review.</p>
      </div>
    <% } %>
  </div>
</div>

<style>
  .btn-outline {
    background-color: transparent;
    border: 1px solid #0070f3;
    color: #0070f3;
  }

  .btn-outline:hover {
    background-color: #f0f7ff;
  }

  .btn-outline.in-wishlist {
    background-color: #f0f7ff;
    color: #0070f3;
  }

  .btn-outline.in-wishlist i {
    color: #ff3e3e;
  }

  .rating-input {
    display: inline-flex;
    flex-direction: row-reverse;
    font-size: 1.5rem;
  }

  .rating-input input {
    display: none;
  }

  .rating-input label {
    cursor: pointer;
    color: #ddd;
    margin-right: 0.25rem;
  }

  .rating-input label:hover,
  .rating-input label:hover ~ label,
  .rating-input input:checked ~ label {
    color: #ffc107;
  }

  .review-item {
    margin-bottom: 1.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #eee;
  }

  .review-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }

  .review-rating {
    color: #ffc107;
  }

  .review-author {
    font-weight: bold;
  }

  .review-date {
    color: #666;
    font-size: 0.875rem;
  }

  .review-title {
    font-weight: bold;
    margin-bottom: 0.5rem;
  }

  .verified-badge {
    display: inline-block;
    background-color: #e3f2fd;
    color: #0d47a1;
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    margin-left: 0.5rem;
  }

  .rating-summary {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }

  .average-rating {
    font-size: 2rem;
    font-weight: bold;
    margin-right: 1rem;
  }

  .rating-bars {
    flex: 1;
  }

  .rating-bar {
    display: flex;
    align-items: center;
    margin-bottom: 0.25rem;
  }

  .rating-label {
    width: 30px;
  }

  .rating-progress {
    flex: 1;
    height: 8px;
    background-color: #eee;
    border-radius: 4px;
    margin: 0 0.5rem;
    overflow: hidden;
  }

  .rating-progress-fill {
    height: 100%;
    background-color: #ffc107;
  }

  .rating-count {
    width: 30px;
    font-size: 0.875rem;
    color: #666;
  }

  .pagination {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
  }

  .pagination button {
    margin: 0 0.25rem;
    padding: 0.25rem 0.5rem;
    border: 1px solid #ddd;
    background-color: #fff;
    cursor: pointer;
  }

  .pagination button.active {
    background-color: #0070f3;
    color: white;
    border-color: #0070f3;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Load reviews
    loadReviews(1);

    // Handle review form submission
    const reviewForm = document.getElementById('review-form');
    if (reviewForm) {
      reviewForm.addEventListener('submit', function(e) {
        e.preventDefault();
        submitReview();
      });
    }

    // Check if product is in wishlist
    <% if (isAuthenticated) { %>
      checkWishlistStatus(<%= product.id %>);
    <% } %>
  });

  // Check if product is in wishlist
  function checkWishlistStatus(productId) {
    fetch(`/api/wishlist/check/${productId}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          updateWishlistButton(data.inWishlist, data.wishlistItemId);
        }
      })
      .catch(error => {
        console.error('Error checking wishlist status:', error);
      });
  }

  // Update wishlist button appearance
  function updateWishlistButton(inWishlist, itemId) {
    const button = document.getElementById('wishlist-btn');
    const text = document.getElementById('wishlist-text');

    if (inWishlist) {
      button.classList.add('in-wishlist');
      button.dataset.itemId = itemId;
      text.textContent = 'Remove from Wishlist';
    } else {
      button.classList.remove('in-wishlist');
      button.dataset.itemId = '';
      text.textContent = 'Add to Wishlist';
    }
  }

  // Toggle wishlist status
  function toggleWishlist(productId) {
    const button = document.getElementById('wishlist-btn');
    const inWishlist = button.classList.contains('in-wishlist');

    if (inWishlist) {
      // Remove from wishlist
      const itemId = button.dataset.itemId;

      fetch(`/api/wishlist/remove/${itemId}`, {
        method: 'DELETE'
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          updateWishlistButton(false);
        } else {
          alert(data.message || 'Error removing from wishlist');
        }
      })
      .catch(error => {
        console.error('Error removing from wishlist:', error);
        alert('Error removing from wishlist');
      });
    } else {
      // Add to wishlist
      fetch('/api/wishlist/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          productId: productId
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          checkWishlistStatus(productId);
        } else {
          alert(data.message || 'Error adding to wishlist');
        }
      })
      .catch(error => {
        console.error('Error adding to wishlist:', error);
        alert('Error adding to wishlist');
      });
    }
  }

  function loadReviews(page) {
    fetch(`/api/reviews/product/<%= product.id %>?page=${page}`)
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          displayReviews(data);
        } else {
          document.getElementById('reviews-container').innerHTML = `
            <p>Error loading reviews. Please try again later.</p>
          `;
        }
      })
      .catch(error => {
        console.error('Error loading reviews:', error);
        document.getElementById('reviews-container').innerHTML = `
          <p>Error loading reviews. Please try again later.</p>
        `;
      });
  }

  function displayReviews(data) {
    const { reviews, pagination, ratings } = data;
    let html = '';

    // Rating summary
    html += `
      <div class="rating-summary">
        <div class="average-rating">${ratings.average.toFixed(1)}</div>
        <div class="rating-bars">
    `;

    for (let i = 5; i >= 1; i--) {
      const count = ratings.distribution[i];
      const percentage = pagination.totalReviews > 0 ? (count / pagination.totalReviews) * 100 : 0;

      html += `
        <div class="rating-bar">
          <div class="rating-label">${i} ★</div>
          <div class="rating-progress">
            <div class="rating-progress-fill" style="width: ${percentage}%"></div>
          </div>
          <div class="rating-count">${count}</div>
        </div>
      `;
    }

    html += `
        </div>
      </div>
      <p>${pagination.totalReviews} customer ${pagination.totalReviews === 1 ? 'review' : 'reviews'}</p>
    `;

    // Reviews list
    if (reviews.length > 0) {
      reviews.forEach(review => {
        const date = new Date(review.created_at).toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        });

        html += `
          <div class="review-item">
            <div class="review-header">
              <div>
                <span class="review-rating">${'★'.repeat(review.rating)}${'☆'.repeat(5 - review.rating)}</span>
                ${review.is_verified_purchase ? '<span class="verified-badge">Verified Purchase</span>' : ''}
              </div>
              <div class="review-date">${date}</div>
            </div>
            <div class="review-author">${review.first_name || 'Anonymous'}</div>
            <div class="review-title">${review.title}</div>
            <div class="review-content">${review.comment}</div>
          </div>
        `;
      });

      // Pagination
      if (pagination.totalPages > 1) {
        html += '<div class="pagination">';

        for (let i = 1; i <= pagination.totalPages; i++) {
          html += `
            <button ${i === pagination.currentPage ? 'class="active"' : ''} onclick="loadReviews(${i})">${i}</button>
          `;
        }

        html += '</div>';
      }
    } else {
      html += '<p>No reviews yet. Be the first to review this product!</p>';
    }

    document.getElementById('reviews-container').innerHTML = html;
  }

  function submitReview() {
    const rating = document.querySelector('input[name="rating"]:checked')?.value;
    const title = document.getElementById('title').value;
    const comment = document.getElementById('comment').value;

    if (!rating || !title || !comment) {
      alert('Please fill in all fields');
      return;
    }

    fetch('/api/reviews/submit', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        productId: <%= product.id %>,
        rating: parseInt(rating),
        title,
        comment
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert(data.message);
        document.getElementById('review-form').reset();
        loadReviews(1);
      } else {
        alert(data.message || 'Error submitting review');
      }
    })
    .catch(error => {
      console.error('Error submitting review:', error);
      alert('Error submitting review');
    });
  }
</script>

<!-- Related Products Section -->
<% if (relatedProducts && relatedProducts.length > 0) { %>
<div class="card mt-4">
  <div class="card-header">
    <h2>Related Products</h2>
  </div>
  <div class="card-body">
    <div class="grid">
      <% relatedProducts.forEach(relatedProduct => { %>
        <div class="card">
          <div class="card-image">
            <a href="/products/<%= relatedProduct.slug %>">
              <img src="<%= relatedProduct.image_url || '/placeholder.svg' %>" alt="<%= relatedProduct.name %>">
            </a>
          </div>
          <div class="card-content">
            <div class="card-title">
              <a href="/products/<%= relatedProduct.slug %>"><%= relatedProduct.name %></a>
            </div>
            <div class="card-category"><%= relatedProduct.category_name || 'Uncategorized' %></div>
            <div class="card-price">
              <% if (relatedProduct.discount_percentage > 0) { %>
                <span style="text-decoration: line-through; color: #666;">$<%= parseFloat(relatedProduct.price).toFixed(2) %></span>
                <span>$<%= (parseFloat(relatedProduct.price) * (1 - parseFloat(relatedProduct.discount_percentage) / 100)).toFixed(2) %></span>
              <% } else { %>
                $<%= parseFloat(relatedProduct.price).toFixed(2) %>
              <% } %>
            </div>
            <a href="/products/<%= relatedProduct.slug %>" class="btn">View Details</a>
          </div>
        </div>
      <% }); %>
    </div>
  </div>
</div>
<% } %>
